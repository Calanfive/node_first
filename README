# Brief - Mon premier programme NodeJS

## Setup

- npm init
    Nom du projet : mon-premier-programme-nodejs
    entry point : dist/index.js
- npm install --save-dev concurrently typescript nodemon @types/node
- ajouter les commandes au package.json
    "dev": "concurrently -k -n \"Typescript,Node\" -p \"[{name}]\" -c \"blue,green\" \"tsc --watch\" \"nodemon dist/index.js\"",
    "start": "tsc && node dist/index.js"
- npx tsc --init
    {
        "compilerOptions": {
            "module": "commonjs",
            "esModuleInterop": true,
            "outDir": "dist",
            "target": "es6",
            "strict": true
        },
        "include": [
            "src/**/*"
        ]
    }
- create src/index.ts
    console.log('Hello world');
- git init
- git ignore node_modules et dist
- git add .
- git commit -m "Initial commit"
- git remote add origin

### Les arguments

https://www.digitalocean.com/community/tutorials/nodejs-command-line-arguments-node-scripts

1 - lire un argument --help du programme et loguer "je vais vous aider" si l'arguemnt est prÃ©sent
2 - lire un argument --name du programme et loguer "Bonjour" et le nom fourni si l'argument est prÃ©sent

### Les objets

1 - crÃ©er un objet "personne" avec les propriÃ©tÃ©s suivantes : nom, prenom, age, sexe
2 - loguer l'objet
3 - changer le nom et le prenom par Laforge et Thomas
4 - loguer l'objet initial et l'objet modifiÃ©
5 - crÃ©er un objet "personne2" Ã  partir de la premiÃ¨re personne (copie)
6 - changer le nom et le prenom de la personne2 par Amish et Fatir
7 - loguer les trois objets

### Création d'un fichier JSON

1 - Installer la dÃ©pendance fs-extra
2 - Créer un fichier JSON avec l'objet personne
3 - Lire le fichier JSON et loguer le contenu

### Les variables d'environnement

1 - CrÃ©er un fichier .env
2 - Ajouter une variable d'environnement "NAME" avec la valeur de votre nom
3 - Installer la dépendance dotenv
4 - Lire la variable d'environnement et loguer "Bonjour" et le nom fourni


#### Routes à créer
/toto => affiche dans la console : "toto" et renvoie "toto"
/date  => renvoie la date actuelle
/thomas => renvoie un objet javascript { nom: "Laforge", prenom: "Thomas" }
/files => crée un fichier toto.txt sur le serveur
/random => renvoie un nombre aléatoire
/randomBetween => renvoie un nombre compris entre deux nombre fourni dans request

#### Bonus
/simplon/logo => renvoie le logo de simplon
/simplon/web => renvoie une page html avec un h1 simplon + icon simplon
/simplon/connection => connecte si le login + mot de passe est bon (votre choix)
/simplon/connected => renvoie connecté ou pas connecté